/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: Blender Artist (https://sketchfab.com/moizmuhammad373)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/bird-e93a906eb38343c4a14458a637136329
Title: Bird
*/

import * as THREE from "three";
import React, { useEffect, useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";
import { Section, useThreeContext } from "../../context/useThreeContext";

interface Props {
  // position: THREE.Vector3;
  // scale: number;
  // rotation: THREE.Euler;
  // moveForward: boolean;
}

const AirPlane: React.FC<Props> = () => {
  const { scene } = useGLTF("/planeModel.glb");
  const ref = useRef<THREE.Group>(null!);
  const { activeSection } = useThreeContext();

  useEffect(() => {
    if (activeSection === Section.PROJECTS) {
      ref.current.rotation.set(0, Math.PI / 2, 0);
      ref.current.scale.set(20, 20, 20);
      ref.current.position.set(0, 30, -200);
    } else if (activeSection === Section.SOCIAL) {
      ref.current.rotation.set(0, Math.PI, 0);
      ref.current.scale.set(100, 100, 100);
      ref.current.position.set(30, -50, -20);
    }
  }, [activeSection]);

  useFrame((_, delta) => {
    if (activeSection === Section.SOCIAL) {
      ref.current.position.z -= delta * 200;
      if (ref.current.position.z < -8000) {
        ref.current.position.z = 10;
      }
    } else if (activeSection === Section.PROJECTS) {
      ref.current.position.x -= delta * 50;
      if (ref.current.position.x < -10) {
        ref.current.position.x = 10;
      }
    }
  });
  return <primitive ref={ref} object={scene} />;
};

export default AirPlane;

useGLTF.preload("/planeModel.glb");
